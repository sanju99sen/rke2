#---
#- name: Create namespace for Rancher Control Plane
#  kubernetes.core.k8s:
#    kubeconfig: "{{ rke_cluster_kube_config }}"
#    state: present
#    api_version: v1
#    kind: Namespace
#    name: cattle-system
#
#- name: Create namespace for cert-manager
#  kubernetes.core.k8s:
#    kubeconfig: "{{ rke_cluster_kube_config }}"
#    state: present
#    api_version: v1
#    kind: Namespace
#    name: cert-manager
#  when:
#  - rancher_certmanager_enabled
#

- name: Create namespace for Rancher Control Plane
  command: "/usr/local/bin/kubectl --kubeconfig={{ rke_cluster_kube_config }} apply -f cattle-system_ns.yaml"

- name: Create namespace for cert-manager
  command: "/usr/local/bin/kubectl --kubeconfig={{ rke_cluster_kube_config }} apply -f cert-manager_ns.yaml"

- name: Add Rancher Repo to Helm
  command: "/usr/local/bin/helm repo add --kubeconfig={{ rke_cluster_kube_config }} {{ helm_rancher_repo }} {{ helm_rancher_repo_url }}"
  changed_when: false

- name: Add Jetstack Cert-Manager Repo to Helm
  command: "/usr/local/bin/helm repo add --kubeconfig={{ rke_cluster_kube_config }} {{ helm_certmanager_jetstack_repo }} {{ helm_certmanager_jetstack_repo_url }}"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Update Helm Repo
  command: "/usr/local/bin/helm repo update --kubeconfig={{ rke_cluster_kube_config }}"
  changed_when: false

- name: Install CRD's for CertManager
  command: "/usr/local/bin/kubectl --kubeconfig={{ rke_cluster_kube_config }} apply --validate=false -f {{ rancher_certmanager_crd_url }}"
  changed_when: false
  ignore_errors: yes
  when:
  - rancher_certmanager_enabled

- name: Install Cert-Manager
  command: "/usr/local/bin/helm upgrade --install --kubeconfig={{ rke_cluster_kube_config }} --namespace cert-manager cert-manager {{ helm_certmanager_jetstack_repo }}/cert-manager"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Wait for certmanager to be ready
  command: "/usr/local/bin/kubectl -n cert-manager --kubeconfig={{ rke_cluster_kube_config }} rollout status deploy/cert-manager"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Wait for certmanager cainjector to be ready
  command: "/usr/local/bin/kubectl -n cert-manager --kubeconfig={{ rke_cluster_kube_config }} rollout status deploy/cert-manager-cainjector"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Wait for certmanager webhook to be ready
  command: "/usr/local/bin/kubectl -n cert-manager --kubeconfig={{ rke_cluster_kube_config }} rollout status deploy/cert-manager-webhook"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Wait 30 seconds for cert-manager to properly run
  pause:
    seconds: "30"

- name: Install Rancher with generated self-signed certificates (via Cert-Manager)
  command: "/usr/local/bin/helm upgrade --install --kubeconfig={{ rke_cluster_kube_config }} --namespace cattle-system --set hostname={{ rancher_hostname }} --set ingress.tls.source=rancher  rancher {{ helm_rancher_repo }}/rancher"
  changed_when: false
  when:
  - rancher_certmanager_enabled
  - rancher_generated_self_signed_certificates
  - not rancher_lets_encrypt_generated_certificated
  - not rancher_bring_your_own_certificates

- name: Wait for Rancher Deployment to be ready
  command: "/usr/local/bin/kubectl -n cattle-system --kubeconfig={{ rke_cluster_kube_config }} rollout status deploy/rancher"
  changed_when: false

- name: Wait for Rancher to be ready
  command: "curl -k --silent https://{{ rancher_hostname }}/ping"
  args:
    warn: no
  register: rancher_ready
  until: rancher_ready.stdout.find("pong") != -1
  retries: 24
  delay: 5
  changed_when: false
  check_mode: no


